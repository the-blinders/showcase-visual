<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://the-blinders.github.io/showcase-visual/docs/Taller-2/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/3D-User-Interaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://the-blinders.github.io/showcase-visual/docs/Taller-2/3D-User-Interaction/</guid><description>Introducción # En computación visual, una interacción en 3D se refiera a una interacción entre los usuarios y el sistema, en donde el usuario interactúa con elementos en espacios de tres dimensiones como imagen, sonido, sensación táctil y motora. Interacciones en donde, tanto para el humano como la máquina, la posición física de los elementos en tres dimensiones es relevante.
Las nuevas tecnologías han posicionado esta área de estudio como uno de los campos con más potencial en interacciones sistema-usuario, dando la posibilidad de relacionarnos con la tecnología y la información, de manera natural para el ser humano y extendiendo distintas alternativas de usabilidad y accesibilidad , para usuarios con diferentes necesidades físicas y motoras.</description></item><item><title/><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/brush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://the-blinders.github.io/showcase-visual/docs/Taller-2/brush/</guid><description>Brush 3d en un desde un plano 2d # En esta práctica exploramos la adpatación de un trazo bidimensional como un trazo tridimensional.
Partiendo del ejemplo mostrado en https://visualcomputing.github.io/docs/scene_trees/main_spaces/#3d-brush que permite trazar tridimensionalmente partiendo de un gesto bidimensional.
Gestos/velocidad # La manera en la que abordamos el problema fue obteniendo la velocidad a la que se desplaza el trazo y haciendo que el color, el tamaño de la brocha dependieran y la profundidad en la que se pinta dependieran de ello.</description></item><item><title/><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Convexhull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Convexhull/</guid><description>Problema de la cáscara # Cuando tenemos un conjunto de puntos en el espacio, podemos crear una cáscara. Esta cáscara es un poliedro con el menor número de vértices y caras posibles que cubra todos los puntos.
La esfera # El objetivo inicial se basaba en la generación de un espacio esférico, caracterizado por distribuir de manera no rectangular sus puntos en la superficie. para ello se buscó usar una diferente alternativa encontrando buenos resultados en la distribución de fibonnacci como se muestra a continuación:</description></item><item><title/><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Espacios-geometricos-Three.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Espacios-geometricos-Three.js/</guid><description>Espacios geométricos p5.js vs Three.js # Three.js es una biblioteca liviana escrita en JavaScript para crear y mostrar gráficos animados por computadora en 3D en un navegador Web y puede ser utilizada en conjunción con el elemento canvas de HTML5, SVG o WebGL. El código fuente está alojado en un repositorio en GitHub.
Se ha popularizado como una de las más importantes para la creación de las animaciones en WebGL.</description></item><item><title/><link>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Espacios-Relativos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://the-blinders.github.io/showcase-visual/docs/Taller-2/Espacios-Relativos/</guid><description>Espacios Relativos # En esta practiva vamos a ver diferentes espacios relativos representados por cubos.
Creacion # Partiendo del ejemplo mostrado en https://visualcomputing.github.io/docs/scene_trees/main_spaces/#3d-gui que permite ver una gui 3d que esta visible en todo momento y tambien tiene espacios relativos, nos tomamos la libertad de hacer nuestro propio ejemplo modificando las figuras por cubos y poniendo diferente framerate y en diferente direccion para los cubos de color rojo con respecto al cubo del centro del sketch.</description></item></channel></rss>